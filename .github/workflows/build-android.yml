name: Build Android (BENVIS)

on:
  workflow_dispatch:
  push:
    paths:
      - 'benvis/**'
      - '.github/workflows/build-android.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROJECT_DIR: benvis
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Cache pub & gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.gradle/caches
          key: ${{ runner.os }}-deps-${{ hashFiles('**/pubspec.lock') }}

      - name: Flutter doctor (sanity)
        run: flutter doctor -v

      - name: Get dependencies (clean resolve)
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          rm -f pubspec.lock || true
          flutter pub get

      - name: Generate code (build_runner)
        working-directory: ${{ env.PROJECT_DIR }}
        run: flutter pub run build_runner build --delete-conflicting-outputs

      # امضا (اختیاری) — اگر سکرت‌ها را در Settings > Secrets اضافه کرده باشی اجرا می‌شود
      - name: Decode keystore (if secrets)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        working-directory: ${{ env.PROJECT_DIR }}/android/app
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks

      - name: Configure signing.gradle (if secrets)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        working-directory: ${{ env.PROJECT_DIR }}/android/app
        run: |
          cat >> signing-config.gradle <<'GRAD'
          android {
            signingConfigs {
              release {
                storeFile file('keystore.jks')
                storePassword System.getenv('STORE_PASSWORD')
                keyAlias System.getenv('KEY_ALIAS')
                keyPassword System.getenv('KEY_PASSWORD')
              }
            }
            buildTypes {
              release {
                signingConfig signingConfigs.release
              }
            }
          }
          GRAD
          echo "STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV

      - name: Build Release APK (split-per-abi)
        working-directory: ${{ env.PROJECT_DIR }}
        run: flutter build apk --release --split-per-abi --dart-define=DEMO_MODE=false

      - name: Build Release AAB
        working-directory: ${{ env.PROJECT_DIR }}
        run: flutter build appbundle --release --dart-define=DEMO_MODE=false

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: benvis-android
          path: |
            ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/*.apk
            ${{ env.PROJECT_DIR }}/build/app/outputs/bundle/release/*.aab