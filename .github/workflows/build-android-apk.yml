name: Build Android APK (smart)
on:
  workflow_dispatch:
  push:
    paths:
      - '**.zip'
      - '**/pubspec.yaml'
      - '.github/workflows/build-android-apk.yml'
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Locate Flutter project
        id: findproj
        shell: bash
        run: |
          set -e
          if [ -d "benvis" ] && [ -f "benvis/pubspec.yaml" ]; then
            echo "project=benvis" >> $GITHUB_OUTPUT
          else
            PROJECT_DIR=$(find . -maxdepth 4 -type f -name "pubspec.yaml" | head -n 1 | xargs -I{} dirname {})
            if [ -z "$PROJECT_DIR" ]; then
              echo "❌ No Flutter project found." >&2
              exit 1
            fi
            echo "project=$PROJECT_DIR" >> $GITHUB_OUTPUT
          fi
          echo "Detected project: $PROJECT_DIR"

      - name: (Safe) Patch Android Gradle defaults
        if: always()
        shell: bash
        working-directory: ${{ steps.findproj.outputs.project }}/android
        run: |
          set -e
          # Gradle wrapper → 8.6 (باثبات با AGP 8.1.x)
          if [ -f gradle/wrapper/gradle-wrapper.properties ]; then
            sed -i 's#distributionUrl=.*#distributionUrl=https\\://services.gradle.org/distributions/gradle-8.6-bin.zip#' gradle/wrapper/gradle-wrapper.properties || true
            sed -i '/distributionSha256/d' gradle/wrapper/gradle-wrapper.properties || true
          fi
          # settings.gradle → AGP/Kotlin نسخه‌های امن
          if [ -f settings.gradle ]; then
            sed -i 's/id(\"com.android.application\") version \".*\"/id(\"com.android.application\") version \"8.1.1\"/' settings.gradle || true
            sed -i 's/id(\"com.android.library\") version \".*\"/id(\"com.android.library\") version \"8.1.1\"/' settings.gradle || true
            sed -i 's/id(\"org.jetbrains.kotlin.android\") version \".*\"/id(\"org.jetbrains.kotlin.android\") version \"1.9.23\"/' settings.gradle || true
          fi
          # compile/target SDK → 34
          if [ -f app/build.gradle ]; then
            sed -i 's/compileSdk *[0-9][0-9]*/compileSdk 34/' app/build.gradle || true
            sed -i 's/targetSdk *[0-9][0-9]*/targetSdk 34/' app/build.gradle || true
            grep -q 'kotlinOptions' app/build.gradle || printf '\nandroid {\n    kotlinOptions { jvmTarget = "17" }\n}\n' >> app/build.gradle
          fi
          # AndroidX/Jetifier/JVM args
          touch ../gradle.properties
          grep -q '^android.useAndroidX=true' ../gradle.properties || echo 'android.useAndroidX=true' >> ../gradle.properties
          grep -q '^android.enableJetifier=true' ../gradle.properties || echo 'android.enableJetifier=true' >> ../gradle.properties
          grep -q '^org.gradle.jvmargs=' ../gradle.properties || echo 'org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8' >> ../gradle.properties

      - name: Flutter pub get
        working-directory: ${{ steps.findproj.outputs.project }}
        run: flutter pub get

      - name: Build APKs (release)
        working-directory: ${{ steps.findproj.outputs.project }}
        run: |
          flutter --version
          flutter build apk --release --split-per-abi || flutter build apk --release

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: ${{ steps.findproj.outputs.project }}/build/app/outputs/flutter-apk/*.apk
