name: Build Android APK (pinned & hardened)

on:
  workflow_dispatch:
  push:
    paths:
      - 'goalpad/**'
      - '.github/workflows/build-android-apk.yml'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Set up JDK 17
        uses: actions/setup-java@a2374547dfdd276b7bd9e4ba2c6ba50647d9c8a7
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Install basic deps
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip zip git xz-utils

      # کلون Flutter stable و اضافه کردن به PATH
      - name: Clone Flutter (stable)
        run: git clone https://github.com/flutter/flutter.git -b stable

      - name: Add Flutter to PATH
        run: |
          echo "$PWD/flutter/bin" >> $GITHUB_PATH
          echo "$PWD/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH

      - name: Verify Flutter
        run: flutter --version

      # استفاده از Android SDK موجود و نصب پلتفرم 34
      - name: Prepare Android SDK
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        run: |
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH || true
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses || true
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "platforms;android-34" "build-tools;34.0.0" || true

      # یافتن پروژه Flutter
      - name: Locate Flutter project
        id: findproj
        run: |
          set -e
          if [ -f "goalpad/pubspec.yaml" ]; then
            echo "project=goalpad" >> $GITHUB_OUTPUT
          else
            PROJECT_DIR=$(find . -maxdepth 5 -type f -name pubspec.yaml | head -n 1 | xargs -I{} dirname {})
            [ -z "$PROJECT_DIR" ] && { echo "❌ No Flutter project found"; exit 1; }
            echo "project=$PROJECT_DIR" >> $GITHUB_OUTPUT
          fi
          echo "Project directory: ${{ steps.findproj.outputs.project }}"

      - name: Flutter pub get
        working-directory: ${{ steps.findproj.outputs.project }}
        run: flutter pub get

      # پچ Gradle/AGP/Kotlin/SDK
      - name: Patch Android Gradle (safe defaults)
        working-directory: ${{ steps.findproj.outputs.project }}/android
        run: |
          set -e
          if [ -f gradle/wrapper/gradle-wrapper.properties ]; then
            sed -i 's#distributionUrl=.*#distributionUrl=https\\://services.gradle.org/distributions/gradle-8.6-bin.zip#' gradle/wrapper/gradle-wrapper.properties || true
            sed -i '/distributionSha256/d' gradle/wrapper/gradle-wrapper.properties || true
          fi
          if grep -q 'plugins' settings.gradle; then
            sed -i 's/id(\\\"com\\.android\\.application\\\") version \\\"[^\\\"]*\\\"/id(\"com.android.application\") version \"8.1.1\"/' settings.gradle || true
            sed -i 's/id(\\\"com\\.android\\.library\\\") version \\\"[^\\\"]*\\\"/id(\"com.android.library\") version \"8.1.1\"/' settings.gradle || true
            sed -i 's/id(\\\"org\\.jetbrains\\.kotlin\\.android\\\") version \\\"[^\\\"]*\\\"/id(\"org.jetbrains.kotlin.android\") version \"1.9.23\"/' settings.gradle || true
          fi
          if [ -f app/build.gradle ]; then
            sed -i 's/compileSdk[[:space:]]*[0-9]\\+/compileSdk 34/' app/build.gradle || true
            sed -i 's/targetSdk[[:space:]]*[0-9]\\+/targetSdk 34/' app/build.gradle || true
            grep -q 'kotlinOptions' app/build.gradle || printf '\nandroid {\n    kotlinOptions { jvmTarget = \"17\" }\n}\n' >> app/build.gradle
          fi
          touch ../gradle.properties
          grep -q '^android.useAndroidX=true' ../gradle.properties || echo 'android.useAndroidX=true' >> ../gradle.properties
          grep -q '^android.enableJetifier=true' ../gradle.properties || echo 'android.enableJetifier=true' >> ../gradle.properties
          grep -q '^org.gradle.jvmargs=' ../gradle.properties || echo 'org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8' >> ../gradle.properties

      # ساخت APK
      - name: Build APKs
        working-directory: ${{ steps.findproj.outputs.project }}
        run: |
          flutter doctor -v
          flutter build apk --debug
          flutter build apk --release || echo "⚠️ Release build failed (likely unsigned)."

      - name: Upload APK artifacts
        uses: actions/upload-artifact@134dcf33c0b9454c4b17a936843d7e21dccdc335
        with:
          name: android-apk
          path: ${{ steps.findproj.outputs.project }}/build/app/outputs/flutter-apk/*.apk
