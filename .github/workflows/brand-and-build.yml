name: Brand to Benvis & Build Android APK (raw)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
      FLUTTER_HOME: ${{ github.workspace }}/flutter
      APP_DIR: ${{ github.workspace }}/app

    steps:
      - name: Show runner info
        run: |
          uname -a
          df -h
          echo "Repo: $GITHUB_REPOSITORY  Run: $GITHUB_RUN_ID"

      # کد را بدون actions/checkout کلون می‌کنیم
      - name: Clone repository
        run: |
          git clone --depth=1 https://github.com/${GITHUB_REPOSITORY}.git "$APP_DIR"
          ls -la "$APP_DIR"

      - name: Install base deps & JDK 17
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl unzip xz-utils zip libglu1-mesa openjdk-17-jdk

      - name: Install Android SDK (cmdline-tools)
        run: |
          mkdir -p "$ANDROID_SDK_ROOT"/cmdline-tools
          curl -L -o cmdtools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdtools.zip -d "$ANDROID_SDK_ROOT"/cmdline-tools
          mv "$ANDROID_SDK_ROOT"/cmdline-tools/cmdline-tools "$ANDROID_SDK_ROOT"/cmdline-tools/latest
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/build-tools/35.0.0" >> $GITHUB_PATH
          yes | "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --licenses
          "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --install \
            "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      - name: Install Flutter (stable)
        run: |
          git clone --depth=1 -b stable https://github.com/flutter/flutter.git "$FLUTTER_HOME"
          echo "$FLUTTER_HOME/bin" >> $GITHUB_PATH
          echo "$FLUTTER_HOME/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
          flutter --version
          flutter doctor -v

      - name: Brand app to Benevis (name/label)
        working-directory: ${{ env.APP_DIR }}
        run: |
          mkdir -p android/app/src/main/res/values
          cat > android/app/src/main/res/values/strings.xml <<'XML'
          <resources>
            <string name="app_name">Benevis</string>
          </resources>
          XML
          sed -i 's/android:label="[^"]*"/android:label="@string\/app_name"/' android/app/src/main/AndroidManifest.xml || true
          echo "Label set to Benevis."

      - name: Flutter pub get
        working-directory: ${{ env.APP_DIR }}
        run: flutter pub get

      - name: Build release APK
        working-directory: ${{ env.APP_DIR }}
        run: flutter build apk --release

      # انتشار APK به‌صورت Release (بدون actions/upload-artifact)
      - name: Publish GitHub Release with APK
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          APK_PATH="${APP_DIR}/build/app/outputs/flutter-apk/app-release.apk"
          test -f "$APK_PATH"
          TAG="ci-build-${GITHUB_RUN_ID}"
          gh release create "$TAG" "$APK_PATH" \
            --repo "$GITHUB_REPOSITORY" \
            --title "Benevis APK (CI ${GITHUB_RUN_ID})" \
            --notes "Automated build from Actions"
