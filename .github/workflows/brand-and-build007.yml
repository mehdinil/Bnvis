name: Build to Benevis & Build Android APK (auto-repair SDK)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      FLUTTER_HOME: ${{ github.workspace }}/flutter
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

    steps:
      # 1. نصب پیش‌نیازها
      - name: Install system dependencies
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jdk curl unzip git xz-utils jq

      # 2. کلون پروژه بدون اکشن مارکت‌پلیس
      - name: Checkout repository (no marketplace)
        run: |
          set -eux
          git clone --depth 1 "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" repo
          cd repo
          git checkout "${{ github.ref_name }}"
          shopt -s dotglob
          rsync -a ./ "$GITHUB_WORKSPACE"/
          cd ..
          rm -rf repo

      # 3. نصب Flutter
      - name: Install Flutter
        run: |
          set -eux
          git clone -b stable https://github.com/flutter/flutter.git "$FLUTTER_HOME"
          echo "$FLUTTER_HOME/bin" >> $GITHUB_PATH
          echo "$FLUTTER_HOME/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
          export PATH="$FLUTTER_HOME/bin:$FLUTTER_HOME/bin/cache/dart-sdk/bin:$PATH"
          flutter --version

      # 4. نصب Android SDK با auto-repair
      - name: Install Android SDK (auto-repair)
        run: |
          set -euxo pipefail
          mkdir -p "$ANDROID_HOME/cmdline-tools"
          cd /tmp
          echo "📦 Downloading Android cmdline-tools..."
          curl -sLo cmd.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmd.zip -d cmdtools

          # 🔍 پیدا کردن پوشه‌ی واقعی bin
          FOUND=$(find cmdtools -type d -name "bin" | head -n 1 || true)
          if [ -z "$FOUND" ]; then
            echo "❌ bin folder not found!"
            ls -R cmdtools || true
            exit 1
          fi
          echo "✅ Found cmdline-tools bin at: $FOUND"

          mkdir -p "$ANDROID_HOME/cmdline-tools/latest"
          cp -r cmdtools/* "$ANDROID_HOME/cmdline-tools/latest/"

          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH"

          echo "🔧 Verifying sdkmanager..."
          if ! command -v sdkmanager >/dev/null 2>&1; then
            echo "❌ sdkmanager still not found!"
            find "$ANDROID_HOME" -type f -name sdkmanager || true
            exit 2
          fi

          echo "✅ Accepting licenses..."
          yes | sdkmanager --licenses || true

          echo "⬇️ Installing Android packages..."
          sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      # 5. ساخت APK
      - name: Flutter build APK
        run: |
          export PATH="$FLUTTER_HOME/bin:$FLUTTER_HOME/bin/cache/dart-sdk/bin:$PATH"
          flutter pub get
          flutter build apk --release
          ls -lh build/app/outputs/flutter-apk/

      # 6. آپلود خروجی به عنوان ریلیز
      - name: Publish APK to GitHub Release
        run: |
          set -eux
          APK="build/app/outputs/flutter-apk/app-release.apk"
          test -f "$APK"

          TAG="benevis-build-${{ github.run_id }}"
          RELEASE_NAME="Benevis Android APK"
          API="https://api.github.com/repos/${{ github.repository }}/releases"
          AUTH="Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"

          echo "🪶 Creating GitHub release..."
          RESP=$(curl -s -X POST -H "$AUTH" -H "Content-Type: application/json" \
            -d "{\"tag_name\":\"$TAG\",\"name\":\"$RELEASE_NAME\",\"body\":\"Automated build run $TAG\"}" "$API")

          UPLOAD_URL=$(echo "$RESP" | jq -r '.upload_url' | sed 's/{?name,label}//')

          echo "⬆️ Uploading APK..."
          curl -s -X POST -H "$AUTH" -H "Content-Type: application/vnd.android.package-archive" \
            --data-binary @"$APK" "$UPLOAD_URL?name=Benevis-${TAG}.apk"

          echo "✅ Uploaded: Benevis-${TAG}.apk"