name: Build to Benevis & Build Android APK (no marketplace actions)

on:
  workflow_dispatch: {}

permissions:
  contents: write   # برای ساخت Release و آپلود APK

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
      # 1) Checkout بدون اکشن مارکت‌پلیس
      - name: Checkout repository (no actions)
        run: |
          git init .
          git remote add origin "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY"
          git fetch --depth=1 origin "$GITHUB_REF_NAME"
          git checkout -f FETCH_HEAD
          git rev-parse --short HEAD

      # 2) نصب JDK 17 و ابزارهای پایه
      - name: Install JDK 17 & base deps
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jdk unzip curl git xz-utils zip
          echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))" >> $GITHUB_ENV
          echo "$JAVA_HOME/bin" >> $GITHUB_PATH

      # 3) نصب Android SDK (cmdline-tools + پکیج‌ها)
      - name: Install Android SDK (cmdline-tools)
        run: |
          mkdir -p "$ANDROID_HOME/cmdline-tools"
          curl -sLo cmdline.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdline.zip -d "$ANDROID_HOME/cmdline-tools"
          mv "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/latest"
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0" "cmdline-tools;latest"

      # 4) نصب Flutter از سورس رسمی
      - name: Install Flutter (stable)
        run: |
          git clone https://github.com/flutter/flutter.git -b stable $HOME/flutter
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          echo "$HOME/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
          flutter --version
          flutter config --enable-android
          flutter precache --android

      # 5) دریافت پکیج‌ها
      - name: Flutter pub get
        run: flutter pub get

      # 6) بیلد APK ریلیز
      - name: Build release APK
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
        run: |
          # اگر نیاز داری، این مقادیر را با مقادیر پروژه‌ات هماهنگ کن:
          # flutter build apk --release --build-name=1.0.0 --build-number=1 \
          #   --target-platform=android-arm,android-arm64
          flutter build apk --release --target-platform=android-arm,android-arm64

      # 7) آماده‌سازی خروجی
      - name: Prepare artifact files
        run: |
          mkdir -p dist
          cp build/app/outputs/flutter-apk/app-release.apk dist/Benevis-release.apk
          sha256sum dist/Benevis-release.apk | tee dist/Benevis-release.apk.sha256
          ls -lh dist

      # 8) نصب GitHub CLI و ساخت Release (بدون marketplace actions)
      - name: Install GitHub CLI
        run: |
          type -p gh || (curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg && \
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg && \
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null && \
          sudo apt-get update && sudo apt-get install -y gh)

      - name: Create draft release & upload APK
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="benevis-apk-${GITHUB_RUN_ID}"
          TITLE="Benevis APK (${GITHUB_SHA::7})"
          NOTES="Automated build from $GITHUB_SHA on branch $GITHUB_REF_NAME"
          # ساخت Release به حالت Draft
          gh release create "$TAG" dist/Benevis-release.apk dist/Benevis-release.apk.sha256 \
            --draft --title "$TITLE" --notes "$NOTES"
          echo "RELEASE_TAG=$TAG" >> $GITHUB_ENV 