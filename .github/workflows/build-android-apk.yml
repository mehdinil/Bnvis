name: Build Android APK (from ZIP)

on:
  workflow_dispatch:
  push:
    paths:
      - '**.zip'
      - '**/pubspec.yaml'
      - '.github/workflows/build-android-apk.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: '34.0.0'
          accept-licenses: true

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Unzip project if a ZIP exists
        run: |
          shopt -s nullglob
          mkdir -p unzipped
          zips=( *.zip **/*.zip )
          if [ ${#zips[@]} -gt 0 ]; then
            echo "Found ZIP(s): ${zips[@]}"
            for z in "${zips[@]}"; do unzip -q "$z" -d unzipped ; done
            echo "unzipped=true" >> $GITHUB_ENV
          else
            echo "unzipped=false" >> $GITHUB_ENV
          fi

      - name: Locate Flutter project (pubspec.yaml)
        id: findproj
        run: |
          set -e
          SEARCH_DIR="."
          if [ "$unzipped" = "true" ]; then SEARCH_DIR="unzipped"; fi
          PROJECT_DIR=$(find "$SEARCH_DIR" -maxdepth 4 -type f -name "pubspec.yaml" | head -n 1 | xargs -I{} dirname {})
          if [ -z "$PROJECT_DIR" ]; then
            echo "❌ No Flutter project (pubspec.yaml) found." >&2
            exit 1
          fi
          echo "project=$PROJECT_DIR" >> $GITHUB_OUTPUT
          echo "Detected project at: $PROJECT_DIR"

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      # ---- Fix: Gradle 8.7 and safe Android config ----
      - name: Patch Android Gradle (set Gradle 8.7)
        working-directory: ${{ steps.findproj.outputs.project }}/android
        run: |
          set -e
          if [ -f gradle/wrapper/gradle-wrapper.properties ]; then
            sed -i 's#distributionUrl=.*#distributionUrl=https://services.gradle.org/distributions/gradle-8.7-all.zip#' gradle/wrapper/gradle-wrapper.properties || true
            sed -i '/distributionSha256/d' gradle/wrapper/gradle-wrapper.properties || true
          fi
          if [ -f app/build.gradle ]; then
            sed -i 's/compileSdk[[:space:]]*[0-9]\+/compileSdk 34/' app/build.gradle || true
            sed -i 's/targetSdk[[:space:]]*[0-9]\+/targetSdk 34/' app/build.gradle || true
            grep -q 'kotlinOptions' app/build.gradle || printf '\nandroid {\n    kotlinOptions { jvmTarget = "17" }\n}\n' >> app/build.gradle
          fi
          touch ../gradle.properties
          grep -q '^android.useAndroidX=true' ../gradle.properties || echo 'android.useAndroidX=true' >> ../gradle.properties
          grep -q '^android.enableJetifier=true' ../gradle.properties || echo 'android.enableJetifier=true' >> ../gradle.properties
          grep -q '^org.gradle.jvmargs=' ../gradle.properties || echo 'org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8' >> ../gradle.properties

      - name: Flutter pub get
        working-directory: ${{ steps.findproj.outputs.project }}
        run: flutter pub get

      - name: Build APK (release)
        working-directory: ${{ steps.findproj.outputs.project }}
        run: |
          flutter --version
          ./android/gradlew -v || true
          flutter build apk --release --split-per-abi || flutter build apk --release

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            ${{ steps.findproj.outputs.project }}/build/app/outputs/flutter-apk/*.apk
