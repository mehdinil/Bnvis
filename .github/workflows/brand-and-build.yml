name: Build to Benevis & Build Android APK (robust, no marketplace actions)

on:
  workflow_dispatch:
  push:
    paths:
      - "android/**"
      - "lib/**"
      - "pubspec.yaml"
      - ".github/workflows/brand-and-build.yml"

permissions:
  contents: write

env:
  ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
  FLUTTER_HOME: ${{ github.workspace }}/flutter
  JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
  GRADLE_OPTS: "-Dorg.gradle.jvmargs='-Xmx3g -XX:MaxMetaspaceSize=512m' -Dkotlin.daemon.jvm.options=-Xmx1024m"

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository (no marketplace action)
        run: |
          set -euxo pipefail
          git init .
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch --depth=1 origin ${{ github.sha }}
          git checkout -qf ${{ github.sha }}

      - name: Install base deps & JDK 17
        run: |
          set -euxo pipefail
          sudo apt-get update -y
          sudo apt-get install -y curl unzip xz-utils zip libglu1-mesa openjdk-17-jdk bash sed coreutils

      - name: Install Android SDK (cmdline-tools + build-tools 35)
        run: |
          set -euxo pipefail
          mkdir -p "$ANDROID_SDK_ROOT"/cmdline-tools
          curl -L -o cmdtools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdtools.zip -d "$ANDROID_SDK_ROOT"/cmdline-tools
          mv "$ANDROID_SDK_ROOT"/cmdline-tools/cmdline-tools "$ANDROID_SDK_ROOT"/cmdline-tools/latest
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/build-tools/35.0.0" >> $GITHUB_PATH
          yes | "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --licenses
          "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --install \
            "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      - name: Install Flutter (stable)
        run: |
          set -euxo pipefail
          git clone --depth=1 -b stable https://github.com/flutter/flutter.git "$FLUTTER_HOME"
          echo "$FLUTTER_HOME/bin" >> $GITHUB_PATH
          echo "$FLUTTER_HOME/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
          flutter --version
          flutter doctor -v

      - name: Locate Flutter project (pubspec.yaml)
        id: locate
        run: |
          set -euxo pipefail
          # پیدا کردن نزدیک‌ترین pubspec.yaml
          FILE=$(git ls-files | grep -E '^pubspec\.yaml$|.*/pubspec\.yaml$' | head -n1 || true)
          if [ -z "$FILE" ]; then
            echo "No pubspec.yaml found in repo!" >&2
            exit 1
          fi
          DIR=$(dirname "$FILE")
          echo "PROJECT_DIR=$DIR" >> $GITHUB_ENV
          echo "Found pubspec at: $FILE (dir=$DIR)"
      
      - name: Brand to Benevis (safe replace)
        run: |
          set -euxo pipefail
          cd "$PROJECT_DIR"
          if [ -f android/app/src/main/res/values/strings.xml ]; then
            sed -i 's#<string name="app_name">[^<]*</string>#<string name="app_name">Benevis</string>#g' android/app/src/main/res/values/strings.xml
          fi
          if [ -f android/app/build.gradle ]; then
            sed -i 's/applicationId "[^"]*"/applicationId "com.benevis.app"/' android/app/build.gradle || true
          fi
          if [ -f android/app/build.gradle.kts ]; then
            sed -i 's/applicationId = "[^"]*"/applicationId = "com.benevis.app"/' android/app/build.gradle.kts || true
          fi

      - name: Flutter pub get
        run: |
          set -euxo pipefail
          cd "$PROJECT_DIR"
          flutter pub get

      - name: Build release APK (verbose)
        env:
          ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          set -euxo pipefail
          cd "$PROJECT_DIR"
          # در صورت قدیمی بودن پروژه: همخوانی AGP/Gradle
          sed -i 's/distributionUrl=.*gradle-.*-all.zip/distributionUrl=https\:\/\/services.gradle.org\/distributions\/gradle-8.4-all.zip/' android/gradle/wrapper/gradle-wrapper.properties || true
          # build
          flutter build apk --release -v

      - name: Publish APK as GitHub Release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euxo pipefail
          cd "$PROJECT_DIR"
          APK="build/app/outputs/flutter-apk/app-release.apk"
          if [ ! -f "$APK" ]; then
            echo "APK not found at $APK" >&2
            ls -R build || true
            exit 1
          fi
          TAG="android-apk-${GITHUB_RUN_NUMBER}"
          gh release create "$TAG" "$APK" -t "Android APK $TAG" -n "Automated build for ${GITHUB_SHA::7}"
          echo "Release created: $TAG"
