name: Build to Benevis & Build Android APK (robust, no marketplace actions)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "android/**"
      - "lib/**"
      - "assets/**"
      - "pubspec.yaml"
      - ".github/workflows/brand-and-build.yml"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      FLUTTER_HOME: ${{ github.workspace }}/flutter
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx3g -Dorg.gradle.daemon=false

    steps:
      # 1) نصب وابستگی‌های سیستمی (بدون marketplace action)
      - name: Install system dependencies
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jdk curl unzip xz-utils git jq rsync

      # 2) کلون خود ریپو، بدون actions/checkout
      - name: Checkout repository (no marketplace)
        run: |
          set -eux
          git clone --depth 1 "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" repo
          cd repo
          # اگه از روی برنچ اومده، همونو بگیر؛ وگرنه همون SHA.
          if [ "${{ github.ref_type }}" = "branch" ]; then
            git checkout "${{ github.ref_name }}"
          else
            git checkout "${{ github.sha }}"
          fi
          shopt -s dotglob
          rsync -a ./ "$GITHUB_WORKSPACE"/
          cd ..
          rm -rf repo

      # 3) نصب Flutter
      - name: Install Flutter (stable)
        run: |
          set -eux
          git clone --depth 1 -b stable https://github.com/flutter/flutter.git "$FLUTTER_HOME"
          echo "$FLUTTER_HOME/bin" >> $GITHUB_PATH
          echo "$FLUTTER_HOME/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
          export PATH="$FLUTTER_HOME/bin:$FLUTTER_HOME/bin/cache/dart-sdk/bin:$PATH"
          flutter --version

      # 4) نصب Android SDK cmdline-tools + افزودن PATH (رفع قطعی خطای sdkmanager not found)
      - name: Install Android SDK (cmdline-tools)
        run: |
          set -euxo pipefail
          mkdir -p "$ANDROID_HOME/cmdline-tools"
          cd /tmp
          echo "📦 Downloading cmdline-tools..."
          curl -sLo cmdtools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdtools.zip -d cmdtools
          mkdir -p "$ANDROID_HOME/cmdline-tools/latest"
          mv cmdtools/* "$ANDROID_HOME/cmdline-tools/latest"

          # افزودن مسیرهای لازم به PATH
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH"

          echo "🔧 Verifying sdkmanager..."
          which sdkmanager || (echo "❌ sdkmanager not found"; ls -R "$ANDROID_HOME/cmdline-tools/latest/bin")

          echo "✅ Accepting licenses..."
          yes | sdkmanager --licenses || true

          echo "⬇️ Installing Android packages..."
          sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      # 5) دریافت پکیج‌ها و ساخت APK ریلیز
      - name: Flutter pub get
        run: |
          export PATH="$FLUTTER_HOME/bin:$FLUTTER_HOME/bin/cache/dart-sdk/bin:$PATH"
          flutter pub get

      - name: Build release APK
        run: |
          set -eux
          export PATH="$FLUTTER_HOME/bin:$FLUTTER_HOME/bin/cache/dart-sdk/bin:$PATH"
          flutter build apk --release
          ls -lah build/app/outputs/flutter-apk

      # 6) انتشار APK به‌عنوان GitHub Release Asset (بدون upload-artifact)
      - name: Publish APK as GitHub Release asset
        run: |
          set -eux
          APK_PATH="build/app/outputs/flutter-apk/app-release.apk"
          test -f "$APK_PATH"

          TAG="build-${{ github.run_id }}"
          RELEASE_NAME="Benevis Android APK ${TAG}"
          API="https://api.github.com"
          REPO="${{ github.repository }}"
          AUTH="Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"

          # ایجاد ریلیز
          RESP=$(curl -s -X POST -H "$AUTH" -H "Content-Type: application/json" \
            "$API/repos/$REPO/releases" \
            -d "{\"tag_name\":\"$TAG\",\"name\":\"$RELEASE_NAME\",\"body\":\"Automated build from run ${TAG}\",\"draft\":false,\"prerelease\":false}")

          # آدرس آپلود فایل
          UPLOAD_URL=$(echo "$RESP" | jq -r '.upload_url' | sed 's/{?name,label}//')

          # آپلود APK
          curl -s -X POST -H "$AUTH" -H "Content-Type: application/vnd.android.package-archive" \
            --data-binary @"$APK_PATH" \
            "$UPLOAD_URL?name=Benevis-${TAG}.apk"

          echo "✅ APK uploaded to Release: Benevis-${TAG}.apk"
