name: Build to Benevis & Build Android APK (no marketplace actions)

on:
  workflow_dispatch:
  push:
    paths:
      - "android/**"
      - "lib/**"
      - "pubspec.yaml"
      - ".github/workflows/brand-and-build.yml"

permissions:
  contents: write

env:
  ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
  FLUTTER_HOME: ${{ github.workspace }}/flutter
  JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # 1) Checkout بدون marketplace action
      - name: Checkout repository (token clone)
        run: |
          set -e
          git init .
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch --depth=1 origin ${{ github.sha }}
          git checkout -qf ${{ github.sha }}
          git status

      # 2) پیش‌نیازها + JDK17
      - name: Install base deps & JDK 17
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl unzip xz-utils zip libglu1-mesa openjdk-17-jdk
          java -version

      # 3) نصب Android SDK (cmdline-tools) و ابزارها
      - name: Install Android SDK
        run: |
          set -e
          mkdir -p "$ANDROID_SDK_ROOT"/cmdline-tools
          curl -L -o cmdtools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdtools.zip -d "$ANDROID_SDK_ROOT"/cmdline-tools
          mv "$ANDROID_SDK_ROOT"/cmdline-tools/cmdline-tools "$ANDROID_SDK_ROOT"/cmdline-tools/latest
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/build-tools/35.0.0" >> $GITHUB_PATH
          yes | "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --licenses
          "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --install \
            "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      # 4) نصب Flutter (clone) و اضافه به PATH
      - name: Install Flutter (clone stable)
        run: |
          git clone --depth=1 -b stable https://github.com/flutter/flutter.git "$FLUTTER_HOME"
      - name: Add Flutter to PATH
        run: |
          echo "$FLUTTER_HOME/bin" >> $GITHUB_PATH
          echo "$FLUTTER_HOME/bin/cache/dart-sdk/bin" >> $GITHUB_PATH

      # 5) تست Flutter
      - name: Verify Flutter
        run: |
          flutter --version
          flutter doctor -v

      # 6) ست کردن نام/برند Benevis داخل اندروید (بی‌خطر)
      - name: Brand to Benevis (strings, appId safe replace)
        run: |
          set -e
          # نام اپ در اندروید
          if [ -f android/app/src/main/res/values/strings.xml ]; then
            sed -i 's#<string name="app_name">[^<]*</string>#<string name="app_name">Benevis</string>#g' android/app/src/main/res/values/strings.xml
          fi
          # applicationId (در صورت وجود)
          if [ -f android/app/build.gradle ]; then
            sed -i 's/applicationId "[^"]*"/applicationId "com.benevis.app"/' android/app/build.gradle || true
          fi
          if [ -f android/app/build.gradle.kts ]; then
            sed -i 's/applicationId = "[^"]*"/applicationId = "com.benevis.app"/' android/app/build.gradle.kts || true
          fi

      # 7) وابستگی‌ها و بیلد ریلیز
      - name: Flutter pub get
        run: flutter pub get

      - name: Build release APK
        env:
          # اختیاری: اگر پروژه قدیمی است، میتواند نیاز باشد
          ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          flutter build apk --release

      # 8) آپلود APK به Release (بدون marketplace action)
      - name: Publish APK as GitHub Release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          APK="build/app/outputs/flutter-apk/app-release.apk"
          if [ ! -f "$APK" ]; then
            echo "APK not found at $APK"; ls -R build || true; exit 1
          fi
          TAG="android-apk-${GITHUB_RUN_NUMBER}"
          gh release create "$TAG" "$APK" -t "Android APK $TAG" -n "Automated build for ${GITHUB_SHA::7}"
          echo "Release created: $TAG"
