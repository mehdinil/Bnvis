name: Build Android APK (demo+normal)

on:
  workflow_dispatch:
  push:
    paths:
      - '**/pubspec.yaml'
      - '.github/workflows/build-android-apk.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      
      - name: Setup Java 17
        uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b
        with:
          distribution: temurin
          java-version: '17'
      
      - name: Install Flutter manually
        run: |
          set -e
          cd $HOME
          git clone --depth 1 -b stable https://github.com/flutter/flutter.git
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          export PATH="$HOME/flutter/bin:$PATH"
          flutter --version
          flutter doctor -v
          flutter precache --android
      
      - name: Locate Flutter project
        id: findproj
        run: |
          set -e
          echo "🔍 Searching for Flutter project..."
          PROJECT_DIR=$(find . -maxdepth 4 -type f -name "pubspec.yaml" | head -n1 | xargs -I{} dirname {})
          [ -n "$PROJECT_DIR" ] || (echo "❌ No pubspec.yaml found" && exit 1)
          echo "PROJECT_DIR=$PROJECT_DIR" >> $GITHUB_ENV
          echo "✅ Detected: $PROJECT_DIR"
          ls -la "$PROJECT_DIR"
      
      - name: Patch Gradle/Android config
        working-directory: ${{ env.PROJECT_DIR }}/android
        run: |
          set -e
          mkdir -p gradle/wrapper
          if [ -f gradle/wrapper/gradle-wrapper.properties ]; then
            sed -i 's#distributionUrl=.*#distributionUrl=https://services.gradle.org/distributions/gradle-8.7-all.zip#' gradle/wrapper/gradle-wrapper.properties || true
            sed -i '/distributionSha256/d' gradle/wrapper/gradle-wrapper.properties || true
          else
            echo "distributionUrl=https\://services.gradle.org/distributions/gradle-8.7-all.zip" > gradle/wrapper/gradle-wrapper.properties
          fi
          touch ../gradle.properties
          grep -q '^android.useAndroidX=' ../gradle.properties || echo 'android.useAndroidX=true' >> ../gradle.properties
          grep -q '^android.enableJetifier=' ../gradle.properties || echo 'android.enableJetifier=true' >> ../gradle.properties
          grep -q '^org.gradle.jvmargs=' ../gradle.properties || echo 'org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8' >> ../gradle.properties
          if [ -f app/build.gradle ]; then
            sed -i 's/compileSdk[[:space:]]*[0-9]\+/compileSdk 34/' app/build.gradle || true
            sed -i 's/targetSdk[[:space:]]*[0-9]\+/targetSdk 34/' app/build.gradle || true
            grep -q 'kotlinOptions' app/build.gradle || printf '\nandroid { kotlinOptions { jvmTarget = "17" } }\n' >> app/build.gradle
          fi
          echo "✅ Gradle config patched"
      
      - name: Accept Android licenses
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
          echo "✅ Android licenses accepted"
      
      - name: flutter pub get
        working-directory: ${{ env.PROJECT_DIR }}
        run: flutter pub get
      
      - name: Build DEMO APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          echo "🚀 Building DEMO APK with DEMO_MODE=true..."
          flutter build apk --release --split-per-abi --dart-define=DEMO_MODE=true 2>&1 | tee $GITHUB_WORKSPACE/build_demo.log
          echo "✅ DEMO APK built"
      
      - name: Build NORMAL APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          echo "🚀 Building NORMAL APK with DEMO_MODE=false..."
          flutter build apk --release --split-per-abi --dart-define=DEMO_MODE=false 2>&1 | tee $GITHUB_WORKSPACE/build_normal.log
          echo "✅ NORMAL APK built"
      
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882
        with:
          name: android-apk
          path: |
            ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/*.apk
            ${{ github.workspace }}/build_demo.log
            ${{ github.workspace }}/build_normal.log
          if-no-files-found: warn
