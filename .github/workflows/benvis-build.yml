name: BENVIS Build and Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - benvis/**
      - .github/workflows/benvis-build.yml

env:
  PROJECT_DIR: benvis

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      
      - uses: actions/setup-java@v4actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
        with:
          distribution: temurin
          java-version: 17
      
      - uses: subosito/flutter-action@2783a3f08e1baf891508463f8c6653c258246225

        with:
          channel: stable
          cache: true
      
      - name: Get dependencies
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs || echo "No codegen"
      
      - name: Build APK split-per-abi
        working-directory: ${{ env.PROJECT_DIR }}
        run: flutter build apk --release --split-per-abi --dart-define=DEMO_MODE=false
      
      - name: Build AAB
        working-directory: ${{ env.PROJECT_DIR }}
        run: flutter build appbundle --release --dart-define=DEMO_MODE=false
        continue-on-error: true
      
      - name: List outputs
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          ls -lh build/app/outputs/flutter-apk/*.apk || echo "No APK"
          ls -lh build/app/outputs/bundle/release/*.aab || echo "No AAB"
      
      - name: Package files
        run: |
          mkdir -p dist
          cp ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/*.apk dist/ || true
          cp ${{ env.PROJECT_DIR }}/build/app/outputs/bundle/release/*.aab dist/ || true
      
      - name: Create tag
        id: tag
        run: echo "tag=benvis-build-${{ github.run_number }}" >> $GITHUB_OUTPUT
      
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          gh release create "$TAG" --title "BENVIS Build #${{ github.run_number }}" --notes "Automated build" dist/*
          echo "Release: https://github.com/${{ github.repository }}/releases/tag/$TAG"
      
      - uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
        if: always()
        with:
          name: benvis-apk
          path: dist/*
