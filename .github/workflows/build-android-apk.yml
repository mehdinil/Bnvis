name: Build Android APK (resilient)

on:
  workflow_dispatch:
  push:
    paths:
      - 'benvis/**'
      - '.github/workflows/build-android-apk.yml'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      
      - name: Setup Java 17
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup Flutter (from releases)
        run: |
          set -e
          cd $HOME
          wget -q https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.24.5-stable.tar.xz
          tar xf flutter_linux_3.24.5-stable.tar.xz
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          echo "$HOME/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
          
      - name: Verify Flutter
        run: |
          export PATH="$HOME/flutter/bin:$PATH"
          flutter --version
          flutter doctor -v
          flutter precache --android
      
      - name: Patch Android config
        working-directory: benvis/android
        run: |
          set -e
          
          # Gradle wrapper
          mkdir -p gradle/wrapper
          cat > gradle/wrapper/gradle-wrapper.properties <<'EOF'
          distributionBase=GRADLE_USER_HOME
          distributionPath=wrapper/dists
          distributionUrl=https\://services.gradle.org/distributions/gradle-8.7-all.zip
          zipStoreBase=GRADLE_USER_HOME
          zipStorePath=wrapper/dists
          EOF
          
          # gradle.properties
          cat > ../gradle.properties <<'EOF'
          org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8
          android.useAndroidX=true
          android.enableJetifier=true
          android.nonTransitiveRClass=true
          EOF
          
          echo "âœ… Gradle configured"
      
      - name: Get dependencies
        working-directory: benvis
        run: |
          export PATH="$HOME/flutter/bin:$PATH"
          flutter pub get -v
      
      - name: Generate code
        working-directory: benvis
        continue-on-error: true
        run: |
          export PATH="$HOME/flutter/bin:$PATH"
          flutter pub run build_runner build --delete-conflicting-outputs
      
      - name: Build APK (universal release)
        working-directory: benvis
        run: |
          export PATH="$HOME/flutter/bin:$PATH"
          flutter build apk --release --dart-define=DEMO_MODE=false 2>&1 | tee $GITHUB_WORKSPACE/build.log
      
      - name: List APKs
        working-directory: benvis
        run: |
          echo "ðŸ“¦ Built APKs:"
          find build/app/outputs/flutter-apk/ -name "*.apk" -ls
      
      - name: Upload APK
        if: always()
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
        with:
          name: benvis-apk
          path: |
            benvis/build/app/outputs/flutter-apk/*.apk
            build.log
          if-no-files-found: warn
